stages:
  - build
  - deploy

variables:
  AWS_DEFAULT_REGION: eu-central-1
  AWS_ECR: "$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "stage"
      variables:
        RUNNER_TAG: "stage-bizzee"
    - if: $CI_COMMIT_BRANCH =~ /^dev/
      variables:
        RUNNER_TAG: "dev-bizzee"
    - when: always

.aws_config:
  before_script:
    - aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
    - aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
    - aws configure set region "$AWS_DEFAULT_REGION"
    - aws ecr get-login-password --region "$AWS_DEFAULT_REGION" | docker login --username AWS --password-stdin "$AWS_ECR"

build:
  stage: build
  extends: .aws_config

  script:
    - docker build --build-arg REACT_APP_GOOGLE_MAPS_API_KEY=$REACT_APP_GOOGLE_MAPS_API_KEY -t $AWS_ECR/$ECR_REPO:latest -t $AWS_ECR/$ECR_REPO:$CI_COMMIT_SHORT_SHA -t $AWS_ECR/$ECR_REPO:$CI_COMMIT_BRANCH .
    - docker push $AWS_ECR/$ECR_REPO:latest
    - docker push $AWS_ECR/$ECR_REPO:$CI_COMMIT_SHORT_SHA
    - docker push $AWS_ECR/$ECR_REPO:$CI_COMMIT_BRANCH

  tags:
    - bizzee

  only:
    - development
    - stage

deploy:
  stage: deploy
  extends: .aws_config

  script:
    - docker stop $CI_PROJECT_NAME || true
    - docker rm $CI_PROJECT_NAME || true
    - docker rmi $AWS_ECR/$ECR_REPO:$CI_COMMIT_BRANCH
    - docker pull $AWS_ECR/$ECR_REPO:$CI_COMMIT_BRANCH
    - docker run --name $CI_PROJECT_NAME --env REACT_APP_GOOGLE_MAPS_API_KEY=$REACT_APP_GOOGLE_MAPS_API_KEY --network app_default -d --restart unless-stopped $AWS_ECR/$ECR_REPO:$CI_COMMIT_BRANCH

  tags:
    - $RUNNER_TAG

  only:
    - development
    - stage
